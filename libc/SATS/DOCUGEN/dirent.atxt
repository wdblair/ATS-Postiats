(* ****** ****** *)

%{
implement srcfilename_get () = "../dirent.sats"
%}

(* ****** ****** *)

%{
val () = patscode_count_reset()
val () = patscode_prefix_set("TRYIT/libc_dirent")
%}

(* ****** ****** *)

#decltitle("\
ATSLIB/libc/dirent\
")

(* ****** ****** *)

#declpreamble("\

The functions declared in this package are mostly the API for the
corresponding libc-functions declared in [dirent.h], and many more details
on these functions can often be found in the Linux Programmer's manual.
See #myatscodelink("libc/SATS/dirent.sats", "dirent.sats") for the SATS
file in ATSLIB where these functions are declared.

")

(* ****** ****** *)

#declnamesynop("dirent_get_d_ino")

(* ****** ****** *)

#declnamesynop("dirent_get_d_name")
#decldescrpt('\

This function returns the content of the #stacode("d_name") field in a
given #stacode("dirent") struct.  Note that the string returned by this
function must be given back.\

')

(* ****** ****** *)

#declnamesynop("dirent_get_d_name_gc")
#decldescrpt('\

This function is a variant of #dyncode("dirent_get_d_name") in that
it returns a linear copy of the string returned by #dyncode("dirent_get_d_name").

')

(* ****** ****** *)

#declnamesynop("compare_dirent_string")
#decldescrpt('\

This is a convenient function for comparing the #stacode("d_name") field of
a given #stacode("dirent") struct and a given string.

')

(* ****** ****** *)

#declnamesynop("opendir")
#declnamesynop("opendir_exn")

(* ****** ****** *)

#declnamesynop("closedir")
#declnamesynop("closedir_exn")

(* ****** ****** *)

#declnamesynop("readdir")
#decldescrpt('\

This function returns a pointer to a #stacode("dirent") structure
representing the next directory entry in the directory stream pointed to by
[dirp].  It returns NULL on reaching the end of the directory stream or if
an error is encountered.

')


(* ****** ****** *)

#declnamesynop("readdir_r")
#decldescrpt('\

This function is a reentrant version of #dyncode("readdir").  It reads the
next directory entry from the directory stream [dirp], and returns it in
the caller-allocated buffer pointed to by [entry]. Also, it places a
pointer to the returned item in [result]. If the end of the directory
stream was encountered, then NULL is instead placed in [result].\

')

(* ****** ****** *)

#declnamesynop("scandir")
#declnamesynop("alphasort")
#declnamesynop("versionsort")

(* ****** ****** *)

#declnamesynop("rewinddir")

(* ****** ****** *)

#declnamesynop("seekdir")
#declnamesynop("telldir")

(* ****** ****** *)

(* end of [dirent.atxt] *)
